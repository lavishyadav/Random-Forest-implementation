__docformat__ = 'restructedtext en'


import os
import sys
import timeit

import numpy as numpy
import csv
import theano
import theano.tensor as T
from sklearn.preprocessing import scale
from logistic_sgd import LogisticRegression, load_data
from sklearn import preprocessing
from random import randint

from sklearn.datasets import make_blobs
from sklearn.ensemble import RandomForestClassifier
from sklearn.calibration import CalibratedClassifierCV
from sklearn.metrics import log_loss


def test_mlp():
    # load the CSV file as a numpy matrix
    datasets = numpy.loadtxt('/home/lavish/biological response/data/train.csv', delimiter=",")
    
    zero =0
    one =0
    print (datasets.shape)
    for i in range(3751):
        if datasets[i,0] == 0:
		zero += 1
 	elif datasets[i,0] == 1:
		one  += 1
 	
    print ( zero)
    print (one)
   
    # separate the data from the target attributes   
    train_x = datasets[0:3000,1:1777]
    train_y = datasets[0:3000,0]
    valid_x = datasets[3000:3751,1:1777]
    valid_y = datasets[3000:3751,0]
    test_x = numpy.loadtxt('/home/lavish/biological response/data/test.csv', delimiter=",")
    test_x = test_x[:,0:1776]
    #testx=testdata[:,0:30]
    print(train_x.shape)
    print(test_x.shape)
    print(train_x)

    clf = RandomForestClassifier(n_estimators=150)
    clf.fit(train_x, train_y)
    clf_probs = clf.predict_proba(test_x)
    sig_clf = CalibratedClassifierCV(clf, method="sigmoid", cv="prefit")
    sig_clf.fit(valid_x, valid_y)
    sig_clf_probs = sig_clf.predict_proba(test_x)
    #sig_score = log_loss(y_test, sig_clf_probs)
    

    result = sig_clf_probs
    writer = csv.writer(open("/home/lavish/biological response/data/Leaderboard_result.csv", 'w'))
    first=["MoleculeId","PredictedProbability"]
    writer.writerow(first)
    for i in range(2501):
	num=[i+1,result[i,1]]
        writer.writerow(num)
   


if __name__ == '__main__':
    test_mlp()
    #test it on the test set
    

